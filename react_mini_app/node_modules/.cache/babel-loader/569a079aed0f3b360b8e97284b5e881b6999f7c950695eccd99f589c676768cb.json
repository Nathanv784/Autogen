{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import'./App.css';import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";function App(){const[userInput,setUserInput]=useState('');const[messages,setMessages]=useState([]);const[chatStatus,setChatStatus]=useState('ended');const messagesEndRef=useRef(null);// Initial chat request structure\nconst initialChatRequest={\"message\":\"Write a quick manuscript\",\"agents_info\":[{\"name\":\"Personal_Assistant\",\"type\":\"AssistantAgent\",\"llm\":{\"model\":\"gpt-4o\"},\"system_message\":\"You are a personal assistant who can answer questions.\",\"description\":\"This is a personal assistant who can answer questions.\"}],\"task_info\":{\"id\":0,\"name\":\"Personal Assistant\",\"description\":\"This is a powerful personal assistant.\",\"maxMessages\":5,\"speakSelMode\":\"auto\"}};// Function to send message/start chat\nconst handleSend=async()=>{let apiEndpoint,requestBody;if(chatStatus==='Chat ongoing'||chatStatus==='inputting'){// Send message request\napiEndpoint='http://yeyu.life:5008/api/send_message';requestBody={message:userInput};}else{// Start chat request\napiEndpoint='http://yeyu.life:5008/api/start_chat';requestBody={...initialChatRequest,message:userInput};}try{const response=await fetch(apiEndpoint,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(requestBody)});if(!response.ok){throw new Error('Failed to send request');}setUserInput('');// Clear input field\n}catch(error){console.error('Error sending request:',error);}};// Function to fetch messages from the backend\nconst fetchMessages=async()=>{try{const response=await fetch('http://yeyu.life:5008/api/get_message');if(!response.ok){throw new Error('Failed to fetch messages');}const data=await response.json();if(data.message){setMessages([...messages,data.message]);}setChatStatus(data.chat_status);}catch(error){console.error('Error fetching messages:',error);}};// Use useEffect to poll for new messages\nuseEffect(()=>{const intervalId=setInterval(fetchMessages,1000);return()=>clearInterval(intervalId);},[messages]);// Scroll to bottom when new messages are added\nuseEffect(()=>{var _messagesEndRef$curre;(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({behavior:\"smooth\"});},[messages]);return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"chat-window\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"messages\",children:[messages.map((msg,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"message \".concat(msg.user==='User_Proxy'?'user':'agent'),children:[/*#__PURE__*/_jsxs(\"strong\",{children:[msg.user,\":\"]}),\" \",msg.message]},index)),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-area\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:userInput,onChange:e=>setUserInput(e.target.value),placeholder:\"Type your message...\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSend,children:\"Send\"})]}),/*#__PURE__*/_jsxs(\"p\",{className:\"chat-status\",children:[\"Chat Status: \",chatStatus]})]})});}export default App;","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxs","_jsxs","jsx","_jsx","App","userInput","setUserInput","messages","setMessages","chatStatus","setChatStatus","messagesEndRef","initialChatRequest","handleSend","apiEndpoint","requestBody","message","response","fetch","method","headers","body","JSON","stringify","ok","Error","error","console","fetchMessages","data","json","chat_status","intervalId","setInterval","clearInterval","_messagesEndRef$curre","current","scrollIntoView","behavior","className","children","map","msg","index","concat","user","ref","type","value","onChange","e","target","placeholder","onClick"],"sources":["/home/nathan/Desktop/Autogen-react/AutoGen_API/react_mini_app/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './App.css'\n\nfunction App() {\n  const [userInput, setUserInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [chatStatus, setChatStatus] = useState('ended'); \n\n  const messagesEndRef = useRef(null);\n\n  // Initial chat request structure\n  const initialChatRequest = {\n    \"message\": \"Write a quick manuscript\", \n    \"agents_info\": [\n        {\n            \"name\": \"Personal_Assistant\",\n            \"type\": \"AssistantAgent\",\n            \"llm\": {\n                \"model\": \"gpt-4o\"\n            },\n            \"system_message\": \"You are a personal assistant who can answer questions.\",\n            \"description\": \"This is a personal assistant who can answer questions.\"\n        }\n    ],\n    \"task_info\": {\n        \"id\": 0,\n        \"name\": \"Personal Assistant\",\n        \"description\": \"This is a powerful personal assistant.\",\n        \"maxMessages\": 5,\n        \"speakSelMode\": \"auto\"\n    }\n  };\n\n  // Function to send message/start chat\n  const handleSend = async () => {\n    let apiEndpoint, requestBody;\n\n    if (chatStatus === 'Chat ongoing' || chatStatus === 'inputting') {\n      // Send message request\n      apiEndpoint = 'http://yeyu.life:5008/api/send_message';\n      requestBody = { message: userInput };\n    } else {\n      // Start chat request\n      apiEndpoint = 'http://yeyu.life:5008/api/start_chat';\n      requestBody = { ...initialChatRequest, message: userInput }; \n    }\n\n    try {\n      const response = await fetch(apiEndpoint, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(requestBody),\n      });\n      \n      if (!response.ok) {\n        throw new Error('Failed to send request');\n      }\n\n      setUserInput(''); // Clear input field\n    } catch (error) {\n      console.error('Error sending request:', error);\n    }\n  };\n\n  // Function to fetch messages from the backend\n  const fetchMessages = async () => {\n    try {\n      const response = await fetch('http://yeyu.life:5008/api/get_message');\n      if (!response.ok) {\n        throw new Error('Failed to fetch messages');\n      }\n\n      const data = await response.json();\n      if (data.message) {\n        setMessages([...messages, data.message]);\n        \n      }\n      setChatStatus(data.chat_status); \n    } catch (error) {\n      console.error('Error fetching messages:', error);\n    }\n  };\n\n  // Use useEffect to poll for new messages\n  useEffect(() => {\n    const intervalId = setInterval(fetchMessages, 1000); \n    return () => clearInterval(intervalId);\n  }, [messages]); \n\n  // Scroll to bottom when new messages are added\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  }, [messages]);\n\n  return (\n    <div className=\"App\">\n\n      <div className=\"chat-window\">\n        <div className=\"messages\">\n          {messages.map((msg, index) => (\n            <div key={index} className={`message ${msg.user === 'User_Proxy' ? 'user' : 'agent'}`}>\n              <strong>{msg.user}:</strong> {msg.message}\n            </div>\n          ))}\n          <div ref={messagesEndRef} />\n        </div>\n        <div className=\"input-area\">\n          <input\n            type=\"text\"\n            value={userInput}\n            onChange={(e) => setUserInput(e.target.value)}\n            placeholder=\"Type your message...\"\n          />\n          <button onClick={handleSend}>Send</button> \n        </div>\n        <p className=\"chat-status\">Chat Status: {chatStatus}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,CAAEC,MAAM,KAAQ,OAAO,CAC1D,MAAO,WAAW,QAAAC,IAAA,IAAAC,KAAA,CAAAC,GAAA,IAAAC,IAAA,yBAElB,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAC9C,KAAM,CAACU,QAAQ,CAAEC,WAAW,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACY,UAAU,CAAEC,aAAa,CAAC,CAAGb,QAAQ,CAAC,OAAO,CAAC,CAErD,KAAM,CAAAc,cAAc,CAAGZ,MAAM,CAAC,IAAI,CAAC,CAEnC;AACA,KAAM,CAAAa,kBAAkB,CAAG,CACzB,SAAS,CAAE,0BAA0B,CACrC,aAAa,CAAE,CACX,CACI,MAAM,CAAE,oBAAoB,CAC5B,MAAM,CAAE,gBAAgB,CACxB,KAAK,CAAE,CACH,OAAO,CAAE,QACb,CAAC,CACD,gBAAgB,CAAE,wDAAwD,CAC1E,aAAa,CAAE,wDACnB,CAAC,CACJ,CACD,WAAW,CAAE,CACT,IAAI,CAAE,CAAC,CACP,MAAM,CAAE,oBAAoB,CAC5B,aAAa,CAAE,wCAAwC,CACvD,aAAa,CAAE,CAAC,CAChB,cAAc,CAAE,MACpB,CACF,CAAC,CAED;AACA,KAAM,CAAAC,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC7B,GAAI,CAAAC,WAAW,CAAEC,WAAW,CAE5B,GAAIN,UAAU,GAAK,cAAc,EAAIA,UAAU,GAAK,WAAW,CAAE,CAC/D;AACAK,WAAW,CAAG,wCAAwC,CACtDC,WAAW,CAAG,CAAEC,OAAO,CAAEX,SAAU,CAAC,CACtC,CAAC,IAAM,CACL;AACAS,WAAW,CAAG,sCAAsC,CACpDC,WAAW,CAAG,CAAE,GAAGH,kBAAkB,CAAEI,OAAO,CAAEX,SAAU,CAAC,CAC7D,CAEA,GAAI,CACF,KAAM,CAAAY,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAACJ,WAAW,CAAE,CACxCK,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACR,WAAW,CAClC,CAAC,CAAC,CAEF,GAAI,CAACE,QAAQ,CAACO,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,wBAAwB,CAAC,CAC3C,CAEAnB,YAAY,CAAC,EAAE,CAAC,CAAE;AACpB,CAAE,MAAOoB,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAChD,CACF,CAAC,CAED;AACA,KAAM,CAAAE,aAAa,CAAG,KAAAA,CAAA,GAAY,CAChC,GAAI,CACF,KAAM,CAAAX,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,uCAAuC,CAAC,CACrE,GAAI,CAACD,QAAQ,CAACO,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,0BAA0B,CAAC,CAC7C,CAEA,KAAM,CAAAI,IAAI,CAAG,KAAM,CAAAZ,QAAQ,CAACa,IAAI,CAAC,CAAC,CAClC,GAAID,IAAI,CAACb,OAAO,CAAE,CAChBR,WAAW,CAAC,CAAC,GAAGD,QAAQ,CAAEsB,IAAI,CAACb,OAAO,CAAC,CAAC,CAE1C,CACAN,aAAa,CAACmB,IAAI,CAACE,WAAW,CAAC,CACjC,CAAE,MAAOL,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CAClD,CACF,CAAC,CAED;AACA5B,SAAS,CAAC,IAAM,CACd,KAAM,CAAAkC,UAAU,CAAGC,WAAW,CAACL,aAAa,CAAE,IAAI,CAAC,CACnD,MAAO,IAAMM,aAAa,CAACF,UAAU,CAAC,CACxC,CAAC,CAAE,CAACzB,QAAQ,CAAC,CAAC,CAEd;AACAT,SAAS,CAAC,IAAM,KAAAqC,qBAAA,CACd,CAAAA,qBAAA,CAAAxB,cAAc,CAACyB,OAAO,UAAAD,qBAAA,iBAAtBA,qBAAA,CAAwBE,cAAc,CAAC,CAAEC,QAAQ,CAAE,QAAS,CAAC,CAAC,CAChE,CAAC,CAAE,CAAC/B,QAAQ,CAAC,CAAC,CAEd,mBACEJ,IAAA,QAAKoC,SAAS,CAAC,KAAK,CAAAC,QAAA,cAElBvC,KAAA,QAAKsC,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1BvC,KAAA,QAAKsC,SAAS,CAAC,UAAU,CAAAC,QAAA,EACtBjC,QAAQ,CAACkC,GAAG,CAAC,CAACC,GAAG,CAAEC,KAAK,gBACvB1C,KAAA,QAAiBsC,SAAS,YAAAK,MAAA,CAAaF,GAAG,CAACG,IAAI,GAAK,YAAY,CAAG,MAAM,CAAG,OAAO,CAAG,CAAAL,QAAA,eACpFvC,KAAA,WAAAuC,QAAA,EAASE,GAAG,CAACG,IAAI,CAAC,GAAC,EAAQ,CAAC,IAAC,CAACH,GAAG,CAAC1B,OAAO,GADjC2B,KAEL,CACN,CAAC,cACFxC,IAAA,QAAK2C,GAAG,CAAEnC,cAAe,CAAE,CAAC,EACzB,CAAC,cACNV,KAAA,QAAKsC,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBrC,IAAA,UACE4C,IAAI,CAAC,MAAM,CACXC,KAAK,CAAE3C,SAAU,CACjB4C,QAAQ,CAAGC,CAAC,EAAK5C,YAAY,CAAC4C,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAC9CI,WAAW,CAAC,sBAAsB,CACnC,CAAC,cACFjD,IAAA,WAAQkD,OAAO,CAAExC,UAAW,CAAA2B,QAAA,CAAC,MAAI,CAAQ,CAAC,EACvC,CAAC,cACNvC,KAAA,MAAGsC,SAAS,CAAC,aAAa,CAAAC,QAAA,EAAC,eAAa,CAAC/B,UAAU,EAAI,CAAC,EACrD,CAAC,CACH,CAAC,CAEV,CAEA,cAAe,CAAAL,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}